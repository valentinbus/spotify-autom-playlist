name: Python application

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Connect to PostgreSQL
      run: |
        flask db init
        flask db migrate
        flask db upgrade
      env:
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432

    - name: Test with unittest
      run: |
        python3 -m app.tests.test_app

  deploy:

    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Deploy
      working-directory: flask
      env:
        HOME_URL: ${{ secrets.HOME_URL }}
        REDIRECT_URL: ${{ secrets.REDIRECT_URL }}
      run: |
        pip install virtualenv 
        virtualenv venv 
        source ./venv/bin/activate 
        pip install -r ../requirements.txt
        mkdir ~/.aws/ 
        echo "[perso]
        aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key = ${{ secrets.AWS_SECRET_KEY_ID }}
        region = eu-west-1" > ~/.aws/credentials 
        cat ~/.aws/credentials 
        echo ${{ secrets.ZAPPA_SETTINGS }} > zappa_settings.json 
        zappa update
